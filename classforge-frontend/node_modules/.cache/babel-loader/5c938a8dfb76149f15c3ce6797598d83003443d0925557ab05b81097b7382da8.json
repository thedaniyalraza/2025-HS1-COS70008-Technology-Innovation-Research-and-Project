{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\draza\\\\classforge\\\\classforge-frontend\\\\src\\\\pages\\\\Allocation.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { ForceGraph2D } from \"react-force-graph\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Allocation = () => {\n  _s();\n  const [graphData, setGraphData] = useState({\n    nodes: [],\n    links: []\n  });\n  useEffect(() => {\n    // âœ… Replace with real API call later\n    setGraphData({\n      nodes: [{\n        id: \"Ali\",\n        group: \"A\",\n        academic: 85,\n        wellbeing: 90\n      }, {\n        id: \"Sara\",\n        group: \"B\",\n        academic: 70,\n        wellbeing: 75\n      }, {\n        id: \"John\",\n        group: \"A\",\n        academic: 60,\n        wellbeing: 80\n      }],\n      links: [{\n        source: \"Ali\",\n        target: \"Sara\",\n        type: \"friend\"\n      }, {\n        source: \"Ali\",\n        target: \"John\",\n        type: \"disrespect\"\n      }]\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-xl font-bold mb-4 text-blue-800\",\n      children: \"\\uD83E\\uDDE0 Class Social Graph\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"600px\",\n        width: \"100%\",\n        backgroundColor: \"#fff\"\n      },\n      children: /*#__PURE__*/_jsxDEV(ForceGraph2D, {\n        graphData: graphData,\n        nodeLabel: node => `${node.id}\\nClass: ${node.group}\\nAcademic: ${node.academic}\\nWellbeing: ${node.wellbeing}`,\n        nodeAutoColorBy: \"group\",\n        linkColor: link => link.type === \"disrespect\" ? \"red\" : \"green\",\n        linkDirectionalArrowLength: 4,\n        linkDirectionalArrowRelPos: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(Allocation, \"MyXi+7KYRiDYxOAKIwb1MBRPXpI=\");\n_c = Allocation;\nexport default Allocation;\nvar _c;\n$RefreshReg$(_c, \"Allocation\");","map":{"version":3,"names":["useEffect","useState","ForceGraph2D","jsxDEV","_jsxDEV","Allocation","_s","graphData","setGraphData","nodes","links","id","group","academic","wellbeing","source","target","type","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","height","width","backgroundColor","nodeLabel","node","nodeAutoColorBy","linkColor","link","linkDirectionalArrowLength","linkDirectionalArrowRelPos","_c","$RefreshReg$"],"sources":["C:/Users/draza/classforge/classforge-frontend/src/pages/Allocation.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { ForceGraph2D } from \"react-force-graph\";\r\n\r\nconst Allocation = () => {\r\n  const [graphData, setGraphData] = useState({ nodes: [], links: [] });\r\n\r\n  useEffect(() => {\r\n    // âœ… Replace with real API call later\r\n    setGraphData({\r\n      nodes: [\r\n        { id: \"Ali\", group: \"A\", academic: 85, wellbeing: 90 },\r\n        { id: \"Sara\", group: \"B\", academic: 70, wellbeing: 75 },\r\n        { id: \"John\", group: \"A\", academic: 60, wellbeing: 80 },\r\n      ],\r\n      links: [\r\n        { source: \"Ali\", target: \"Sara\", type: \"friend\" },\r\n        { source: \"Ali\", target: \"John\", type: \"disrespect\" },\r\n      ],\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"p-6\">\r\n      <h1 className=\"text-xl font-bold mb-4 text-blue-800\">ðŸ§  Class Social Graph</h1>\r\n      <div style={{ height: \"600px\", width: \"100%\", backgroundColor: \"#fff\" }}>\r\n        <ForceGraph2D\r\n          graphData={graphData}\r\n          nodeLabel={(node) =>\r\n            `${node.id}\\nClass: ${node.group}\\nAcademic: ${node.academic}\\nWellbeing: ${node.wellbeing}`\r\n          }\r\n          nodeAutoColorBy=\"group\"\r\n          linkColor={(link) => (link.type === \"disrespect\" ? \"red\" : \"green\")}\r\n          linkDirectionalArrowLength={4}\r\n          linkDirectionalArrowRelPos={1}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Allocation;\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,YAAY,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC;IAAEQ,KAAK,EAAE,EAAE;IAAEC,KAAK,EAAE;EAAG,CAAC,CAAC;EAEpEV,SAAS,CAAC,MAAM;IACd;IACAQ,YAAY,CAAC;MACXC,KAAK,EAAE,CACL;QAAEE,EAAE,EAAE,KAAK;QAAEC,KAAK,EAAE,GAAG;QAAEC,QAAQ,EAAE,EAAE;QAAEC,SAAS,EAAE;MAAG,CAAC,EACtD;QAAEH,EAAE,EAAE,MAAM;QAAEC,KAAK,EAAE,GAAG;QAAEC,QAAQ,EAAE,EAAE;QAAEC,SAAS,EAAE;MAAG,CAAC,EACvD;QAAEH,EAAE,EAAE,MAAM;QAAEC,KAAK,EAAE,GAAG;QAAEC,QAAQ,EAAE,EAAE;QAAEC,SAAS,EAAE;MAAG,CAAC,CACxD;MACDJ,KAAK,EAAE,CACL;QAAEK,MAAM,EAAE,KAAK;QAAEC,MAAM,EAAE,MAAM;QAAEC,IAAI,EAAE;MAAS,CAAC,EACjD;QAAEF,MAAM,EAAE,KAAK;QAAEC,MAAM,EAAE,MAAM;QAAEC,IAAI,EAAE;MAAa,CAAC;IAEzD,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEb,OAAA;IAAKc,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBf,OAAA;MAAIc,SAAS,EAAC,sCAAsC;MAAAC,QAAA,EAAC;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/EnB,OAAA;MAAKoB,KAAK,EAAE;QAAEC,MAAM,EAAE,OAAO;QAAEC,KAAK,EAAE,MAAM;QAAEC,eAAe,EAAE;MAAO,CAAE;MAAAR,QAAA,eACtEf,OAAA,CAACF,YAAY;QACXK,SAAS,EAAEA,SAAU;QACrBqB,SAAS,EAAGC,IAAI,IACd,GAAGA,IAAI,CAAClB,EAAE,YAAYkB,IAAI,CAACjB,KAAK,eAAeiB,IAAI,CAAChB,QAAQ,gBAAgBgB,IAAI,CAACf,SAAS,EAC3F;QACDgB,eAAe,EAAC,OAAO;QACvBC,SAAS,EAAGC,IAAI,IAAMA,IAAI,CAACf,IAAI,KAAK,YAAY,GAAG,KAAK,GAAG,OAAS;QACpEgB,0BAA0B,EAAE,CAAE;QAC9BC,0BAA0B,EAAE;MAAE;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACjB,EAAA,CAnCID,UAAU;AAAA8B,EAAA,GAAV9B,UAAU;AAqChB,eAAeA,UAAU;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}